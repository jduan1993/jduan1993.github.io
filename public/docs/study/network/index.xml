<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络 on 君宝的笔记</title>
    <link>http://localhost:1313/docs/study/network/</link>
    <description>Recent content in 网络 on 君宝的笔记</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="http://localhost:1313/docs/study/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP 协议各版本比较</title>
      <link>http://localhost:1313/docs/study/network/http-comparison/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/network/http-comparison/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;特性/版本&lt;/th&gt;&#xA;          &lt;th&gt;HTTP/1.0&lt;/th&gt;&#xA;          &lt;th&gt;HTTP/1.1&lt;/th&gt;&#xA;          &lt;th&gt;HTTP/2&lt;/th&gt;&#xA;          &lt;th&gt;HTTP/3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;发布时间&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1996&lt;/td&gt;&#xA;          &lt;td&gt;1997&lt;/td&gt;&#xA;          &lt;td&gt;2015&lt;/td&gt;&#xA;          &lt;td&gt;2022&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;连接管理&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;每个请求建立新连接（短连接）&lt;/td&gt;&#xA;          &lt;td&gt;默认长连接（Connection: keep-alive）&lt;/td&gt;&#xA;          &lt;td&gt;基于单个 TCP 连接多路复用&lt;/td&gt;&#xA;          &lt;td&gt;基于 QUIC（UDP）多路复用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;请求/响应格式&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;文本协议，明文&lt;/td&gt;&#xA;          &lt;td&gt;文本协议，明文&lt;/td&gt;&#xA;          &lt;td&gt;二进制协议，头压缩（HPACK）&lt;/td&gt;&#xA;          &lt;td&gt;二进制协议，改进头压缩（QPACK）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;多路复用&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;支持，多个请求复用一个连接&lt;/td&gt;&#xA;          &lt;td&gt;支持，且在 UDP 上减少延迟&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;请求优先级&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;支持请求优先级和流量控制&lt;/td&gt;&#xA;          &lt;td&gt;支持请求优先级和更灵活的流控&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;头部压缩&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;          &lt;td&gt;使用 HPACK 压缩头部&lt;/td&gt;&#xA;          &lt;td&gt;使用 QPACK 改进头部压缩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;服务器推送&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;不支持&lt;/td&gt;&#xA;          &lt;td&gt;支持服务器推送&lt;/td&gt;&#xA;          &lt;td&gt;支持服务器推送&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;传输层协议&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;TCP&lt;/td&gt;&#xA;          &lt;td&gt;TCP&lt;/td&gt;&#xA;          &lt;td&gt;TCP&lt;/td&gt;&#xA;          &lt;td&gt;基于 QUIC（UDP）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;明文，通常搭配 HTTPS&lt;/td&gt;&#xA;          &lt;td&gt;明文，通常搭配 HTTPS&lt;/td&gt;&#xA;          &lt;td&gt;依赖 TLS 1.2 或更高&lt;/td&gt;&#xA;          &lt;td&gt;依赖 QUIC 的内置加密&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;性能提升点&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;          &lt;td&gt;长连接减少握手成本&lt;/td&gt;&#xA;          &lt;td&gt;多路复用减少队头阻塞（Head-of-Line Blocking）&lt;/td&gt;&#xA;          &lt;td&gt;QUIC减少连接建立时延和丢包重传延迟&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;简单静态网页&lt;/td&gt;&#xA;          &lt;td&gt;大多数现有网站和API&lt;/td&gt;&#xA;          &lt;td&gt;高并发、多资源加载网站、视频流&lt;/td&gt;&#xA;          &lt;td&gt;对延迟敏感的应用，如游戏、视频&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;版本详细说明&#34;&gt;&#xD;&#xA;  版本详细说明&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%88%e6%9c%ac%e8%af%a6%e7%bb%86%e8%af%b4%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;http10&#34;&gt;&#xD;&#xA;  HTTP/1.0&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http10&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个请求都要建立一个新的 TCP 连接，效率低。&lt;/li&gt;&#xA;&lt;li&gt;无持久连接，不支持流水线请求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;http11&#34;&gt;&#xD;&#xA;  HTTP/1.1&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http11&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;引入持久连接，默认开启长连接，减少连接建立次数。&lt;/li&gt;&#xA;&lt;li&gt;支持管道化请求（pipelining），但实际应用有限。&lt;/li&gt;&#xA;&lt;li&gt;支持分块传输编码（Chunked Transfer-Encoding），适合流式传输。&lt;/li&gt;&#xA;&lt;li&gt;缺点：多个请求依然串行，存在队头阻塞（Head-of-Line Blocking）问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;http2&#34;&gt;&#xD;&#xA;  HTTP/2&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http2&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于二进制分帧（frame）传输，多路复用多个请求在一个 TCP 连接上并发执行。&lt;/li&gt;&#xA;&lt;li&gt;头部使用 HPACK 压缩，减少冗余。&lt;/li&gt;&#xA;&lt;li&gt;支持服务器推送，服务器主动发送资源。&lt;/li&gt;&#xA;&lt;li&gt;解决了 HTTP/1.x 的队头阻塞问题，但仍受 TCP 队头阻塞影响。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;http3&#34;&gt;&#xD;&#xA;  HTTP/3&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http3&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于 QUIC 协议（基于 UDP），减少连接建立延迟和重传延迟。&lt;/li&gt;&#xA;&lt;li&gt;QUIC 内置加密和多路复用，避免 TCP 队头阻塞。&lt;/li&gt;&#xA;&lt;li&gt;更适合移动端和高丢包环境，提升用户体验。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>往返时间（Round Trip Time）</title>
      <link>http://localhost:1313/docs/study/network/rtt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/network/rtt/</guid>
      <description>&lt;h1 id=&#34;-什么是-rtt&#34;&gt;&#xD;&#xA;  🔁 什么是 RTT？&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e4%bb%80%e4%b9%88%e6%98%af-rtt&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;RTT（Round Trip Time）&lt;/strong&gt;：一个完整的“请求-响应”往返时间。&lt;/li&gt;&#xA;&lt;li&gt;当我们说 &lt;strong&gt;2-RTT&lt;/strong&gt;，意思是连接建立需要 2 次完整的往返消息交互。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;-一2-rtt-连接建立流程tcp--tls-12&#34;&gt;&#xD;&#xA;  ✅ 一、2-RTT 连接建立流程（TCP + TLS 1.2）&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e4%b8%802-rtt-%e8%bf%9e%e6%8e%a5%e5%bb%ba%e7%ab%8b%e6%b5%81%e7%a8%8btcp--tls-12&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;这是传统 HTTPS 的流程：TCP + TLS 1.2。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-所需-rtt2-次&#34;&gt;&#xD;&#xA;  ⏱️ 所需 RTT：&lt;strong&gt;2 次&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e6%89%80%e9%9c%80-rtt2-%e6%ac%a1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;h3 id=&#34;-过程&#34;&gt;&#xD;&#xA;  🔄 过程：&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e8%bf%87%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;-第-1-rtttcp-三次握手连接层&#34;&gt;&#xD;&#xA;  🧩 第 1 RTT：TCP 三次握手（连接层）&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac-1-rtttcp-%e4%b8%89%e6%ac%a1%e6%8f%a1%e6%89%8b%e8%bf%9e%e6%8e%a5%e5%b1%82&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;客户端发送 &lt;code&gt;SYN&lt;/code&gt; → 请求建立连接&lt;/li&gt;&#xA;&lt;li&gt;服务端回复 &lt;code&gt;SYN + ACK&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;客户端回复 &lt;code&gt;ACK&lt;/code&gt; → &lt;strong&gt;TCP 连接建立&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;-第-2-rtttls-12-握手安全层&#34;&gt;&#xD;&#xA;  🧩 第 2 RTT：TLS 1.2 握手（安全层）&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac-2-rtttls-12-%e6%8f%a1%e6%89%8b%e5%ae%89%e5%85%a8%e5%b1%82&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;客户端发送 &lt;code&gt;ClientHello&lt;/code&gt;（包含加密参数）&lt;/li&gt;&#xA;&lt;li&gt;服务端返回 &lt;code&gt;ServerHello&lt;/code&gt; + 证书 + 公钥&lt;/li&gt;&#xA;&lt;li&gt;客户端验证证书、协商密钥，发送加密的 &lt;code&gt;PreMasterSecret&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;服务端确认密钥后双方可开始加密通信&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;👉 &lt;strong&gt;总共两次 RTT 才能开始传输应用层数据（如 HTTP 请求）&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
